@startuml
skinparam classAttributeIconSize 0
class Puntaje {
-puntos: int
-multiplicador: int
+Puntaje(puntos, multiplicador: int)
+sumar(p Puntaje):
+restar(p Puntaje):
+multiplicar(p Puntaje):
+obtenerPuntaje(): int
}

class CartaInglesa {
-palo: Palo
-numero: int
+obtenerPuntos(): Puntaje
+cambiarPalo(Palo)
+cambiarNumero(numero: int)
+aplicarEstado()
}

interface Estado {
+{abstract}aplicarModificador(Puntaje): Puntaje
}

CartaInglesa *-- Estado :tiene

class Mano {
-maxCartas: int
-cartas: List<Carta>
+agregarCarta(Carta)
+quitarCarta(Carta): Carta
+obtenerCartas(): List<Carta>
}

class CartasSeleccionadas {
-juego: Juego
+tirarMano(jokers: ManoDeJokers): Puntaje
+puntuarMano(): Puntaje
+descartar()
}

interface Joker {
+aplicarModificador(Carta, Puntaje, Juego): Puntaje
}

CartasSeleccionadas --|> Mano

class Jugador {
-puntaje: Puntaje
-mano: Mano
-jokers: ManoDeJokers
-cartas: CartasSeleccionadas
+tirarMano(): Puntaje
+descartar()
+seleccionarCarta(Carta)
+deseleccionarCarta(Carta)
}

Jugador --> Puntaje: "tiene"
CartasSeleccionadas ..> Puntaje: " usa"
Joker ..> Puntaje: " usa"
Estado .up.> Puntaje: "usa"
CartaInglesa .left.> Puntaje: "usa"

@enduml