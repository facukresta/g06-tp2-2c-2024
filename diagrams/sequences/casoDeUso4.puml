@startuml casoDeUso4
title "test04 El Jugador Con Un Comodin Con Chances De Aplicar Un Modificador De 1 Sobre 1000 Con Efecto De Suma De Multiplicador Aplica Ese Efecto Cuando Las Probabilidades Estan Dadas"
!pragma teoz true

participant "TestCase" as TestCase

activate TestCase

TestCase -> "c:Comodin" as comodin **: new SumaMultiplicador(13, new cartaAlta())

activate comodin
comodin -> "a:Aleatorio" as aleatorio **: new Aleatorio(1000)
activate aleatorio
comodin <-- aleatorio
deactivate aleatorio
comodin -> "cartaAlta:cartaAlta" as cartaAlta ** : new cartaAlta()
activate cartaAlta
comodin <-- cartaAlta
deactivate cartaAlta
TestCase <-- comodin : c
deactivate comodin


TestCase -> "mano:Mano" as mano **: new Mano(8)
activate mano
TestCase <-- mano : mano
note right of TestCase: creamos 2 cartas y las guardamos la lista "cartas"
TestCase -> mano : agregarCartas(cartas)
deactivate mano

TestCase -> "comodinera:Comodinera" as comodinera **: new()
activate comodinera
TestCase -> comodinera : agregarComodin(c)
deactivate comodinera

TestCase -> "esperado1:Puntaje" as esperado1 **: new Puntaje(12,1)
activate esperado1
TestCase <-- esperado1 : esperado1
deactivate esperado1


TestCase -> "esperado2:Puntaje" as esperado2 **: new Puntaje(12,13)
activate esperado2
TestCase <-- esperado2 : esperado2
deactivate esperado2

note right of TestCase: creamos una lista "cartas1" con una carta
TestCase -> "Juego" as juego : chequearJuego(cartas1)
activate juego
loop para cada juego en juegos
juego -> "juegos:List" as juegos : colocarCartas(cartas1)
juego -> juegos: obtenerMayor()
end
TestCase <- juego : juego1 = new CartaAlta()
deactivate juego

note right of TestCase: creamos una lista "cartas2" con la otra carta
TestCase -> "Juego" as juego : chequearJuego(cartas2)
activate juego
loop para cada juego en juegos
juego -> "juegos:List" as juegos : colocarCartas(cartas2)
juego -> juegos: obtenerMayor()
end
TestCase <- juego : juego2 = new CartaAlta()
deactivate juego


TestCase -> mano : jugarMano(cartas1, juego1, comodinera)
activate mano
mano -> "juego1:CartaAlta" as mejor:  puntuarMano()

activate mejor
mano <-- mejor : obtenido1:Puntaje
deactivate mejor
mano -> comodinera : aplicarComodines(obtenido1, juego1)
loop para cada comodin
comodinera -> "Comodin" : aplicarModificador(obtenido1, juego1)
end
TestCase <-- mano : obtenido1:Puntaje
deactivate mano

TestCase -> mano : jugarMano(cartas2, juego2, comodinera)
activate mano
mano -> "juego2:CartaAlta" as mejor:  puntuarMano()

activate mejor
mano <-- mejor : obtenido2:Puntaje
deactivate mejor
mano -> comodinera : aplicarComodines(obtenido2, juego2)
loop para cada comodin
comodinera -> "Comodin" : aplicarModificador(obtenido2, juego2)
end
TestCase <-- mano : obtenido2:Puntaje
deactivate mano

TestCase -> esperado1 : tenesMismoPuntaje(obtenido1)
activate esperado1
TestCase <-- esperado1 : true
deactivate esperado1

TestCase -> esperado2 : tenesMismoPuntaje(obtenido2)
activate esperado2
TestCase <-- esperado2 : true
deactivate esperado2

deactivate TestCase

@enduml